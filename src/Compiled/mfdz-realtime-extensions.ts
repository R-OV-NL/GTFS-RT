/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 4.24.0
 * source: mfdz-realtime-extensions.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./gtfs-realtime";
import * as pb_1 from "google-protobuf";
export namespace transit_realtime {
    export class TripDescriptorExtension extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            route_url?: string;
            agency_id?: string;
            route_long_name?: string;
            route_type?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("route_url" in data && data.route_url != undefined) {
                    this.route_url = data.route_url;
                }
                if ("agency_id" in data && data.agency_id != undefined) {
                    this.agency_id = data.agency_id;
                }
                if ("route_long_name" in data && data.route_long_name != undefined) {
                    this.route_long_name = data.route_long_name;
                }
                if ("route_type" in data && data.route_type != undefined) {
                    this.route_type = data.route_type;
                }
            }
        }
        get route_url() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set route_url(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get has_route_url() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get agency_id() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set agency_id(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get has_agency_id() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get route_long_name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set route_long_name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get has_route_long_name() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get route_type() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set route_type(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get has_route_type() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            route_url?: string;
            agency_id?: string;
            route_long_name?: string;
            route_type?: number;
        }): TripDescriptorExtension {
            const message = new TripDescriptorExtension({});
            if (data.route_url != null) {
                message.route_url = data.route_url;
            }
            if (data.agency_id != null) {
                message.agency_id = data.agency_id;
            }
            if (data.route_long_name != null) {
                message.route_long_name = data.route_long_name;
            }
            if (data.route_type != null) {
                message.route_type = data.route_type;
            }
            return message;
        }
        toObject() {
            const data: {
                route_url?: string;
                agency_id?: string;
                route_long_name?: string;
                route_type?: number;
            } = {};
            if (this.route_url != null) {
                data.route_url = this.route_url;
            }
            if (this.agency_id != null) {
                data.agency_id = this.agency_id;
            }
            if (this.route_long_name != null) {
                data.route_long_name = this.route_long_name;
            }
            if (this.route_type != null) {
                data.route_type = this.route_type;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_route_url && this.route_url.length)
                writer.writeString(1, this.route_url);
            if (this.has_agency_id && this.agency_id.length)
                writer.writeString(2, this.agency_id);
            if (this.has_route_long_name && this.route_long_name.length)
                writer.writeString(3, this.route_long_name);
            if (this.has_route_type)
                writer.writeUint32(4, this.route_type);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TripDescriptorExtension {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TripDescriptorExtension();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.route_url = reader.readString();
                        break;
                    case 2:
                        message.agency_id = reader.readString();
                        break;
                    case 3:
                        message.route_long_name = reader.readString();
                        break;
                    case 4:
                        message.route_type = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TripDescriptorExtension {
            return TripDescriptorExtension.deserialize(bytes);
        }
    }
    export class StopTimePropertiesExtension extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            pickup_type?: StopTimePropertiesExtension.DropOffPickupType;
            dropoff_type?: StopTimePropertiesExtension.DropOffPickupType;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pickup_type" in data && data.pickup_type != undefined) {
                    this.pickup_type = data.pickup_type;
                }
                if ("dropoff_type" in data && data.dropoff_type != undefined) {
                    this.dropoff_type = data.dropoff_type;
                }
            }
        }
        get pickup_type() {
            return pb_1.Message.getFieldWithDefault(this, 1, StopTimePropertiesExtension.DropOffPickupType.REGULAR) as StopTimePropertiesExtension.DropOffPickupType;
        }
        set pickup_type(value: StopTimePropertiesExtension.DropOffPickupType) {
            pb_1.Message.setField(this, 1, value);
        }
        get has_pickup_type() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get dropoff_type() {
            return pb_1.Message.getFieldWithDefault(this, 2, StopTimePropertiesExtension.DropOffPickupType.REGULAR) as StopTimePropertiesExtension.DropOffPickupType;
        }
        set dropoff_type(value: StopTimePropertiesExtension.DropOffPickupType) {
            pb_1.Message.setField(this, 2, value);
        }
        get has_dropoff_type() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            pickup_type?: StopTimePropertiesExtension.DropOffPickupType;
            dropoff_type?: StopTimePropertiesExtension.DropOffPickupType;
        }): StopTimePropertiesExtension {
            const message = new StopTimePropertiesExtension({});
            if (data.pickup_type != null) {
                message.pickup_type = data.pickup_type;
            }
            if (data.dropoff_type != null) {
                message.dropoff_type = data.dropoff_type;
            }
            return message;
        }
        toObject() {
            const data: {
                pickup_type?: StopTimePropertiesExtension.DropOffPickupType;
                dropoff_type?: StopTimePropertiesExtension.DropOffPickupType;
            } = {};
            if (this.pickup_type != null) {
                data.pickup_type = this.pickup_type;
            }
            if (this.dropoff_type != null) {
                data.dropoff_type = this.dropoff_type;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_pickup_type)
                writer.writeEnum(1, this.pickup_type);
            if (this.has_dropoff_type)
                writer.writeEnum(2, this.dropoff_type);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StopTimePropertiesExtension {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StopTimePropertiesExtension();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.pickup_type = reader.readEnum();
                        break;
                    case 2:
                        message.dropoff_type = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): StopTimePropertiesExtension {
            return StopTimePropertiesExtension.deserialize(bytes);
        }
    }
    export namespace StopTimePropertiesExtension {
        export enum DropOffPickupType {
            REGULAR = 0,
            NONE = 1,
            PHONE_AGENCY = 2,
            COORDINATE_WITH_DRIVER = 3
        }
    }
}
